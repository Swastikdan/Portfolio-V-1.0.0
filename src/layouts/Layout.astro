---
const { title = "Swastik Dan | Personal Portfolio" } = Astro.props;
const {
  description = "Explore the portfolio site of Swastik Dan with a range of creative skills and experiences, including problem solving, research, and proficiency in Full Stack Web Development",
} = Astro.props;
const { ogImage = "https://ik.imagekit.io/swastikdan/OG_Image_Main.png" } =
  Astro.props;
const { ogUrl = "https://www.swastikdan.in/" } = Astro.props;
const { altUrl = "https://swastikdan.in/" } = Astro.props;
const {
  keywords = "web developer, web design, website design, web development services, front-end web development",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta content={description} name="description" />
    <meta content={keywords} name="keywords" />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={ogUrl} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content="en_US" />
    <meta property="og:site_name" content={title} />
    <meta name="twitter:card" content={ogImage} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <meta name="robots" content="index, follow" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="language" content="en" />
    <meta name="author" content="Swastik Dan" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta
      name="robots"
      content="max-snippet:-1, max-image-preview:large, max-video-preview:-1, index, follow"
    />
    <link rel="canonical" href="https://swastikdan.in/" />
    <meta name="robots" content="noodp " />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link
      rel="manifest"
      href="/site.webmanifest"
      crossorigin="use-credentials"
    />
    <link
      rel="shortcut icon"
      href="https://ik.imagekit.io/swastikdan/tr:f-auto,q-80/apple-touch-icon.png"
      type="image/x-icon"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="https://ik.imagekit.io/swastikdan/tr:f-auto,q-80/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="https://ik.imagekit.io/swastikdan/tr:f-auto,q-80/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="https://ik.imagekit.io/swastikdan/tr:f-auto,q-80/favicon-16x16.png"
    />
    <meta name="theme-color" content="#000000" />
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
    <link rel="alternate" hreflang="en" href={altUrl} />
    <title>{title}</title>
    <script type="application/ld+json">
      {
        "@context": "http://schema.org",
        "@type": "WebPage",
        "name": "Personal Portfolio of Swastik Dan",
        "author": {
          "@type": "Person",
          "name": "Swastik Dan"
        },
        "description": "Explore the portfolio site of Swastik Dan showcasing creative skills and experiences, including problem solving, research, and proficiency in Full Stack Web Development."
      }
    </script>
    <style>
      body {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
    </style>
  </head>
  <body
    class="space-grotesk bg-white dark:bg-gray-900 mx-auto select-none md:select-auto"
  >
    <div
      id="preloader"
      style="position: fixed; overflow: hidden; width: 100%; z-index: 999"
      class="overflow-hidden"
    >
      <div
        class="min-h-[100vh] flex flex-col bg-white dark:bg-gray-900 border-gray-700 shadow-slate-700/[.7] z-50 fi"
      >
        <div
          class="flex flex-auto flex-col justify-center items-center p-4 md:p-5"
        >
          <div class="flex justify-center">
            <div
              class="animate-spin inline-block w-14 h-14 md:w-20 md:h-20 border-[3.5px] border-current border-t-transparent text-blue-600 rounded-full"
              role="status"
              aria-label="loading"
            >
              <span class="sr-only">Loading...</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      var loader = document.getElementById("preloader");
      window.addEventListener("load", function () {
        loader.style.display = "none";
      });
    </script>
    <slot />
  </body>
</html>
<style is:global>
  @font-face {
    font-family: "Space Grotesk";
    src:
      url("/fonts/space-grotesk-latin-700.woff2") format("woff2"),
      url("/fonts/space-grotesk-latin-700.woff") format("woff");
    font-display: swap;
  }
  @font-face {
    font-family: "Gotham";
    src:
      url("/fonts/Gotham-Book.woff2") format("woff2"),
      url("/fonts/Gotham-Book.woff") format("woff");
    font-display: swap;
  }
  .space-grotesk {
    font-family: "Space Grotesk";
  }
  .gotham {
    font-family: "Gotham";
  }
  .code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
  .slide-down {
    transform: translateY(0);
    transition: transform 0.3s ease-in-out;
  }
  .slide-up {
    transform: translateY(-100%);
    transition: transform 0.3s ease-in-out;
  }
  #navbar {
    transform: translateY(-100%);
    transition: transform 0.3s ease-in-out;
  }
  /* Styles for the open navigation bar */
  #navbar.nav-open {
    transform: translateY(0);
  }

  .reveal-element {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 1s ease,
      transform 1s ease;
  }

  @media (prefers-reduced-motion: reduce) {
    .reveal-element {
      transition-duration: 0.2s;
      transform: none; /* Remove transform effect */
    }
  }

  .reveal-element.reveal {
    opacity: 1;
    transform: translateY(0);
    transition:
      opacity 1s ease,
      transform 1.5s ease;
  }

  /* Customize the appearance of selected text */
  ::selection {
    background-color: #0077b6; /* Background color when text is selected */
    color: #fff; /* Text color when text is selected */
  }
</style>

<!-- <script
  is:inline
  src="https://cdn.jsdelivr.net/npm/smooth-scroll@16.1.0/dist/smooth-scroll.min.js"
></script> -->

<script is:inline>
  !(function (e, t) {
    "function" == typeof define && define.amd
      ? define([], function () {
          return t(e);
        })
      : "object" == typeof exports
      ? (module.exports = t(e))
      : (e.SmoothScroll = t(e));
  })(
    "undefined" != typeof global
      ? global
      : "undefined" != typeof window
      ? window
      : this,
    function (C) {
      "use strict";
      var L = {
          ignore: "[data-scroll-ignore]",
          header: null,
          topOnEmptyHash: !0,
          speed: 500,
          speedAsDuration: !1,
          durationMax: null,
          durationMin: null,
          clip: !0,
          offset: 0,
          easing: "easeInOutCubic",
          customEasing: null,
          updateURL: !0,
          popstate: !0,
          emitEvents: !0,
        },
        H = function () {
          var n = {};
          return (
            Array.prototype.forEach.call(arguments, function (e) {
              for (var t in e) {
                if (!e.hasOwnProperty(t)) return;
                n[t] = e[t];
              }
            }),
            n
          );
        },
        r = function (e) {
          "#" === e.charAt(0) && (e = e.substr(1));
          for (
            var t,
              n = String(e),
              o = n.length,
              a = -1,
              r = "",
              i = n.charCodeAt(0);
            ++a < o;

          ) {
            if (0 === (t = n.charCodeAt(a)))
              throw new InvalidCharacterError(
                "Invalid character: the input contains U+0000."
              );
            (1 <= t && t <= 31) ||
            127 == t ||
            (0 === a && 48 <= t && t <= 57) ||
            (1 === a && 48 <= t && t <= 57 && 45 === i)
              ? (r += "\\" + t.toString(16) + " ")
              : (r +=
                  128 <= t ||
                  45 === t ||
                  95 === t ||
                  (48 <= t && t <= 57) ||
                  (65 <= t && t <= 90) ||
                  (97 <= t && t <= 122)
                    ? n.charAt(a)
                    : "\\" + n.charAt(a));
          }
          return "#" + r;
        },
        q = function () {
          return Math.max(
            document.body.scrollHeight,
            document.documentElement.scrollHeight,
            document.body.offsetHeight,
            document.documentElement.offsetHeight,
            document.body.clientHeight,
            document.documentElement.clientHeight
          );
        },
        x = function (e) {
          return e
            ? ((t = e),
              parseInt(C.getComputedStyle(t).height, 10) + e.offsetTop)
            : 0;
          var t;
        },
        Q = function (e, t, n, o) {
          if (t.emitEvents && "function" == typeof C.CustomEvent) {
            var a = new CustomEvent(e, {
              bubbles: !0,
              detail: { anchor: n, toggle: o },
            });
            document.dispatchEvent(a);
          }
        };
      return function (o, e) {
        var M,
          a,
          I,
          A,
          w = {};
        (w.cancelScroll = function (e) {
          cancelAnimationFrame(A), (A = null), e || Q("scrollCancel", M);
        }),
          (w.animateScroll = function (i, s, e) {
            w.cancelScroll();
            var c = H(M || L, e || {}),
              u = "[object Number]" === Object.prototype.toString.call(i),
              t = u || !i.tagName ? null : i;
            if (u || t) {
              var l = C.pageYOffset;
              c.header && !I && (I = document.querySelector(c.header));
              var n,
                o,
                a,
                d,
                r,
                f,
                m,
                h,
                p = x(I),
                g = u
                  ? i
                  : (function (e, t, n, o) {
                      var a = 0;
                      if (e.offsetParent)
                        for (; (a += e.offsetTop), (e = e.offsetParent); );
                      return (
                        (a = Math.max(a - t - n, 0)),
                        o && (a = Math.min(a, q() - C.innerHeight)),
                        a
                      );
                    })(
                      t,
                      p,
                      parseInt(
                        "function" == typeof c.offset
                          ? c.offset(i, s)
                          : c.offset,
                        10
                      ),
                      c.clip
                    ),
                y = g - l,
                v = q(),
                S = 0,
                E =
                  ((n = y),
                  (a = (o = c).speedAsDuration
                    ? o.speed
                    : Math.abs((n / 1e3) * o.speed)),
                  o.durationMax && a > o.durationMax
                    ? o.durationMax
                    : o.durationMin && a < o.durationMin
                    ? o.durationMin
                    : parseInt(a, 10)),
                b = function (e, t) {
                  var n,
                    o,
                    a,
                    r = C.pageYOffset;
                  if (e == t || r == t || (l < t && C.innerHeight + r) >= v)
                    return (
                      w.cancelScroll(!0),
                      (o = t),
                      (a = u),
                      0 === (n = i) && document.body.focus(),
                      a ||
                        (n.focus(),
                        document.activeElement !== n &&
                          (n.setAttribute("tabindex", "-1"),
                          n.focus(),
                          (n.style.outline = "none")),
                        C.scrollTo(0, o)),
                      Q("scrollStop", c, i, s),
                      !(A = d = null)
                    );
                },
                O = function (e) {
                  var t, n, o;
                  d || (d = e),
                    (S += e - d),
                    (f =
                      l +
                      y *
                        ((n = r = 1 < (r = 0 === E ? 0 : S / E) ? 1 : r),
                        "easeInQuad" === (t = c).easing && (o = n * n),
                        "easeOutQuad" === t.easing && (o = n * (2 - n)),
                        "easeInOutQuad" === t.easing &&
                          (o = n < 0.5 ? 2 * n * n : (4 - 2 * n) * n - 1),
                        "easeInCubic" === t.easing && (o = n * n * n),
                        "easeOutCubic" === t.easing && (o = --n * n * n + 1),
                        "easeInOutCubic" === t.easing &&
                          (o =
                            n < 0.5
                              ? 4 * n * n * n
                              : (n - 1) * (2 * n - 2) * (2 * n - 2) + 1),
                        "easeInQuart" === t.easing && (o = n * n * n * n),
                        "easeOutQuart" === t.easing &&
                          (o = 1 - --n * n * n * n),
                        "easeInOutQuart" === t.easing &&
                          (o =
                            n < 0.5
                              ? 8 * n * n * n * n
                              : 1 - 8 * --n * n * n * n),
                        "easeInQuint" === t.easing && (o = n * n * n * n * n),
                        "easeOutQuint" === t.easing &&
                          (o = 1 + --n * n * n * n * n),
                        "easeInOutQuint" === t.easing &&
                          (o =
                            n < 0.5
                              ? 16 * n * n * n * n * n
                              : 1 + 16 * --n * n * n * n * n),
                        t.customEasing && (o = t.customEasing(n)),
                        o || n)),
                    C.scrollTo(0, Math.floor(f)),
                    b(f, g) || ((A = C.requestAnimationFrame(O)), (d = e));
                };
              0 === C.pageYOffset && C.scrollTo(0, 0),
                (m = i),
                (h = c),
                u ||
                  (history.pushState &&
                    h.updateURL &&
                    history.pushState(
                      { smoothScroll: JSON.stringify(h), anchor: m.id },
                      document.title,
                      m === document.documentElement ? "#top" : "#" + m.id
                    )),
                "matchMedia" in C &&
                C.matchMedia("(prefers-reduced-motion)").matches
                  ? C.scrollTo(0, Math.floor(g))
                  : (Q("scrollStart", c, i, s),
                    w.cancelScroll(!0),
                    C.requestAnimationFrame(O));
            }
          });
        var t = function (e) {
            if (
              !e.defaultPrevented &&
              !(0 !== e.button || e.metaKey || e.ctrlKey || e.shiftKey) &&
              "closest" in e.target &&
              (a = e.target.closest(o)) &&
              "a" === a.tagName.toLowerCase() &&
              !e.target.closest(M.ignore) &&
              a.hostname === C.location.hostname &&
              a.pathname === C.location.pathname &&
              /#/.test(a.href)
            ) {
              var t,
                n = r(a.hash);
              if ("#" === n) {
                if (!M.topOnEmptyHash) return;
                t = document.documentElement;
              } else t = document.querySelector(n);
              (t = t || "#top" !== n ? t : document.documentElement) &&
                (e.preventDefault(),
                (function (e) {
                  if (history.replaceState && e.updateURL && !history.state) {
                    var t = C.location.hash;
                    (t = t || ""),
                      history.replaceState(
                        {
                          smoothScroll: JSON.stringify(e),
                          anchor: t || C.pageYOffset,
                        },
                        document.title,
                        t || C.location.href
                      );
                  }
                })(M),
                w.animateScroll(t, a));
            }
          },
          n = function (e) {
            if (
              null !== history.state &&
              history.state.smoothScroll &&
              history.state.smoothScroll === JSON.stringify(M)
            ) {
              var t = history.state.anchor;
              ("string" == typeof t &&
                t &&
                !(t = document.querySelector(r(history.state.anchor)))) ||
                w.animateScroll(t, null, { updateURL: !1 });
            }
          };
        w.destroy = function () {
          M &&
            (document.removeEventListener("click", t, !1),
            C.removeEventListener("popstate", n, !1),
            w.cancelScroll(),
            (A = I = a = M = null));
        };
        return (
          (function () {
            if (
              !(
                "querySelector" in document &&
                "addEventListener" in C &&
                "requestAnimationFrame" in C &&
                "closest" in C.Element.prototype
              )
            )
              throw "Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.";
            w.destroy(),
              (M = H(L, e || {})),
              (I = M.header ? document.querySelector(M.header) : null),
              document.addEventListener("click", t, !1),
              M.updateURL &&
                M.popstate &&
                C.addEventListener("popstate", n, !1);
          })(),
          w
        );
      };
    }
  );
</script>

<script is:inline>
  // JavaScript to toggle the navigation bar open/close
  document.addEventListener("DOMContentLoaded", function () {
    const toggleButton = document.querySelector("#toggle_nav");
    const navbar = document.querySelector("#navbar");

    // Function to toggle the navigation bar
    function toggleNavbar() {
      navbar.classList.toggle("nav-open");
    }

    // Add an event listener to the toggle button
    toggleButton.addEventListener("change", toggleNavbar);

    // Add event listeners to the navigation links to close the navigation bar when a link is clicked
    const navLinks = document.querySelectorAll("ul li a");
    navLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (toggleButton.checked) {
          toggleButton.checked = false; // Uncheck the toggle button to close the navbar
          toggleNavbar(); // Close the navbar immediately
        }
      });
    });
  });

  function handleIntersection(entries, observer) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Add the 'reveal' class to elements that are in the viewport
        entry.target.classList.add("reveal");

        // Disconnect the observer for this target
        observer.unobserve(entry.target);
      }
    });
  }

  // Create an Intersection Observer
  const observer = new IntersectionObserver(handleIntersection, {
    root: null, // Use the viewport as the root
    rootMargin: "0px", // No margin
    threshold: 0.2, // Trigger the callback when 20% of the element is visible
  });

  // Observe all elements with the 'reveal-element' class
  const revealElements = document.querySelectorAll(
    ".reveal-element:not(.header)"
  );
  revealElements.forEach((element) => {
    observer.observe(element);
  });

  const navBar = document.getElementById("nav-bar");
  const scrollDistance = 80;
  let lastScrollTop = 0;

  window.addEventListener("scroll", () => {
    const scrollY = window.scrollY || window.pageYOffset;

    if (scrollY > lastScrollTop) {
      // Scrolling down
      navBar.classList.add("slide-up");
      navBar.classList.remove("slide-down");
    } else {
      // Scrolling up
      navBar.classList.add("slide-down");
      navBar.classList.remove("slide-up");
    }

    if (scrollY >= scrollDistance) {
      navBar.classList.add("bg-white", "dark:bg-gray-900");
    } else {
      navBar.classList.remove("bg-white", "dark:bg-gray-900");
    }

    lastScrollTop = scrollY;
  });
  const sections = document.querySelectorAll(".section");
  const navLinks = document.querySelectorAll("ul a");

  window.addEventListener("scroll", () => {
    let current = "";
    sections.forEach((section) => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;
      if (pageYOffset >= sectionTop - sectionHeight / 2) {
        current = section.getAttribute("id");
      }
    });

    navLinks.forEach((link) => {
      link.classList.remove("active");
      if (link.getAttribute("href").slice(1) === current) {
        link.classList.add("active");
      }
    });
  });

  const scroll = new SmoothScroll('a[href*="#"]', {
    speed: 400, // Adjust the scroll speed as needed
    offset: 55, // Adjust the scroll offset if you have a fixed header
  });

  // Function to add the active class to the appropriate navigation link
  function setActiveNavLink() {
    const sections = ["home", "projects", "about", "skills", "contact"];
    const navLinks = document.querySelectorAll("ul li a");

    let currentActiveSection = null; // Store the currently active section

    sections.forEach((section) => {
      const target = document.getElementById(section);
      const link = document.querySelector(`a[href="/#${section}"]`);

      if (target && link) {
        const rect = target.getBoundingClientRect();
        if (rect.top <= 100 && rect.bottom >= 100) {
          currentActiveSection = section; // Update the currently active section
        }
      } else {
        // console.error(`Section with ID "${section}" or matching link not found.`); // for debugging
      }
    });
    // Remove the 'text-blue-600' class from all navigation links
    navLinks.forEach((link) => {
      link.classList.remove("text-sky-500");
    });
    // Add the 'text-blue-600' class to the currently active navigation link
    if (currentActiveSection) {
      const activeLink = document.querySelector(
        `a[href="/#${currentActiveSection}"]`
      );
      if (activeLink) {
        activeLink.classList.add("text-sky-500");
      }
    }
  }
  // Call the setActiveNavLink function after the DOM is fully loaded
  document.addEventListener("DOMContentLoaded", setActiveNavLink);

  // Call the setActiveNavLink function on scroll
  window.addEventListener("scroll", setActiveNavLink);
</script>

<script>
  document.addEventListener("DOMContentLoaded", (event) => {
    // Force all images to have alt text and explicit width and height
    document.querySelectorAll("img").forEach((img) => {
      if (!img.alt) {
        img.alt = "Image";
      }
    });

    // Force all links to have a title attribute
    document.querySelectorAll("a").forEach((a) => {
      if (!a.title) {
        a.title = a.textContent || a.href;
      }
      // Add ARIA role
      a.setAttribute("role", "link");
    });

    // Force all form inputs to have associated labels
    document.querySelectorAll("input").forEach((input) => {
      if (!input.id) {
        input.id = `input-${Math.random().toString(36).substr(2, 9)}`;
      }
      if (!document.querySelector(`label[for="${input.id}"]`)) {
        const label = document.createElement("label");
        label.htmlFor = input.id;
        label.textContent = input.name || input.id;
        input.parentNode.insertBefore(label, input);
      }
      // Add ARIA role
      input.setAttribute("role", "textbox");
    });

    // Ensure all buttons are keyboard accessible and have role="button" and aria-label
    document.querySelectorAll("button").forEach((button) => {
      button.setAttribute("tabindex", "0");
      button.setAttribute("role", "button");
      if (!button.getAttribute("aria-label")) {
        button.setAttribute("aria-label", button.textContent || "Button");
      }
    });
  });
</script>
